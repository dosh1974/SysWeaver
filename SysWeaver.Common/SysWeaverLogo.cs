using System;
using System.Collections.Generic;

namespace SysWeaver
{
    public static class SysWeaverLogo
    {
        /*
        /// <summary>
        /// Get all lines in the logo
        /// </summary>
        public static IReadOnlyList<String> Lines => Arts;
        */

        /// <summary>
        /// Draw the logo to the console with specific colors, use default to draw using the default color scheme
        /// </summary>
        public static void Draw(ConsoleColor bright = ConsoleColor.Green, ConsoleColor dark = ConsoleColor.DarkGreen, ConsoleColor poweredBy = ConsoleColor.Cyan)
        {
            var oldC = Console.ForegroundColor;
            Console.ForegroundColor = poweredBy;
            Console.WriteLine("                                   Powered by");
            Console.WriteLine();
            RenderLogo(bright, dark);
            Console.ForegroundColor = oldC;

            /*
            var a = Arts;
            var l = a.Length;
            var oldC = Console.ForegroundColor;
            var cols = Colors;
            var colSize = cols.Length;
            for (int i = 0; i < l; ++i)
            {
                Console.ForegroundColor = cols[i];
                Console.WriteLine(a[i]);
            }
            Console.ForegroundColor = oldC; 
            */
        }

        /*


        /// <summary>
        /// Draw the logo as monochrome (using the current color)
        /// </summary>
        public static void DrawMono()
        {
            foreach (var l in Arts)
                Console.WriteLine(l);
        }

        */

        static readonly ConsoleColor[] Colors =
        [
            ConsoleColor.DarkGray,
            ConsoleColor.Blue,
            ConsoleColor.DarkCyan,
            ConsoleColor.DarkMagenta,
            ConsoleColor.DarkRed,
            ConsoleColor.DarkYellow,
            ConsoleColor.DarkGreen,
            ConsoleColor.Black,
            ConsoleColor.Green,
            ConsoleColor.Green,
            ConsoleColor.DarkGreen,
            ConsoleColor.DarkYellow,
            ConsoleColor.DarkRed,
            ConsoleColor.DarkMagenta,
            ConsoleColor.DarkCyan,
        ];

/*
        static readonly String[] Arts =
        [
@"                     Powered by",
@"               ______  _     _   ______",
@"              / _____)| |   | | / _____)",
@"             ( (____  | |___| |( (____",
@"              \____ \ |_____  | \____ \",
@"              _____) ) _____| | _____) )",
@"             (______/ (_______|(______/",
@"",
@" _  _  _  _______  _______  _     _  _______  ______",
@"(_)(_)(_)(_______)(_______)(_)   (_)(_______)(_____ \",
@" _  _  _  _____    _______  _     _  _____    _____) )",
@"| || || ||  ___)  |  ___  || |   | ||  ___)  |  __  /",
@"| || || || |_____ | |   | | \ \ / / | |_____ | |  \ \",
@" \_____/ |_______)|_|   |_|  \___/  |_______)|_|   |_|",
@"",
        ];

*/
        public static void RenderLogo(ConsoleColor bright = ConsoleColor.Green, ConsoleColor dark = ConsoleColor.DarkGreen, String tab = "") => AsciiTools.RenderColor(Logo, bright, dark, tab);
        public static void RenderLogoGradient(String tab = "") => AsciiTools.RenderColorGradient(LogoGradient, tab);


        public static void RenderCircle(ConsoleColor bright = ConsoleColor.Green, ConsoleColor dark = ConsoleColor.DarkGreen, String tab = "") => AsciiTools.RenderColor(Circle, bright, dark, tab);
        public static void RenderCircleGradient(String tab = "") => AsciiTools.RenderColorGradient(CircleGradient, tab);

        public static void RenderAv(ConsoleColor bright = ConsoleColor.Green, ConsoleColor dark = ConsoleColor.DarkGreen, String tab = "") => AsciiTools.RenderColor(AvLogo, bright, dark, tab);
        public static void RenderAvGradient(String tab = "") => AsciiTools.RenderColorGradient(AvLogoGradient, tab);


        static readonly Byte[] Logo = //	196 bytes
        [
            132,147,  1, 14,194, 48, 12,  3,153, 20, 84,120,197,126,192,135,144, 16,252,255, 19,172,203, 50,187,137, 41,155, 52,173,237,197,
            181,163,214,150,199,250,124,221,223,159,165, 60,151,243,105,199,168,209, 74, 27,  9, 83,213,237,214, 95,167,107,125, 34,180,194,
            254,215,153,235,246, 29,188,108, 51,137, 40, 10, 94,129, 12, 60,211,235, 19, 81,234, 93, 23, 25,160,224,213,133,152,100, 80,253,
             19,196, 60,195,185, 43, 43, 36, 98,146,  2,245,209, 83, 65,152,101,211,144,199,166,227, 33,200, 12, 55, 85,169,101, 59,208, 86,
             76,140, 38,122,165,233, 66, 79, 59, 63,244, 64,229,164,190, 59,251,114, 71,163, 15,180, 95,233, 33,107, 81,216,231, 21,195,121,
            195,193, 60, 11, 14,200,223,188,116,157,224,158,213, 89,141, 19, 22,198,224, 59,174, 41, 31,183, 88,253,117,220, 10, 99, 95,  0,
              0,  0,255,255,
        ];

        static readonly Byte[] LogoGradient = //	270 bytes
        [
            124,142,203,110,194, 64, 12, 69,139,228, 34,181, 44,202,130, 46,200,162, 36, 66,137, 16,168,  4, 85,169, 34, 88,241,234, 87, 84,
            170, 10, 45,255,255, 11,140,199,113, 60,241, 24,174,133,227,199,241,101, 96,176,156,124,255, 60,253,253,255,158,206,151,175,227,
             97,183,221, 15, 34, 61,183,170,154,174, 10, 54, 85,151,  0,235,186,250,196, 32, 58,190, 87,132,237,224, 43,100, 62, 92,238,188,
            197, 77, 20,  1, 67,165,114,245,210,170, 84,147,114,245,174,137,232, 30,247, 20,218,129,174, 35, 34,114,144, 59,169,110,213,228,
            240,170,180,222,140, 90,173, 55,117, 51,245,157, 77, 68, 14, 72,112,212,157, 89,109, 17,  0, 15, 78,243, 30,138, 42,204, 44,154,
            203,206,102,130,218,116,155, 47, 40,102,129,151,118, 19,134,187, 59,126,237,171,196, 45,242,179, 95, 14,143, 78,121,159,126,156,
            169, 34,249,186,144, 93, 94, 76, 21,195,157,223,153,126,121,129, 87,226, 22, 56,248,185,197, 52,255,233,253,248,  5,226,202,226,
             46,116,147,105,204,228, 48,118, 74,179,183, 36,205,124,149, 96,102, 81,151, 38,  9,125, 29, 69,186,195, 64,154, 49, 71, 21,102,
             14,234,112, 43, 20,147, 55, 24,184,  2,  0,  0,255,255,
        ];

        static readonly Byte[] Circle =  //	294 bytes
        [
            204,150, 75, 18,194, 32, 16, 68, 67,133,210,242, 20, 46,245, 84,150,222,255, 18, 26, 62, 51,205, 48, 13, 73, 86,134,133, 73,138,
            247,104,129,  0, 49,220, 95,207,199,237,253, 89,248, 21,250, 18,121,197, 53, 92,157,226, 33, 90,249,210, 21,138, 33,210, 25, 87,
            128, 45,154, 65, 23, 51,130,132, 71,  7, 29,128, 32, 48,248,  1,216, 19,112, 60, 15,133,243,166, 40,226,140, 47, 61,137,141,203,
            155,236, 72,138,169,128, 40,234,125,148,170, 35,  5,151,200,191, 33, 65,218, 25, 71, 44, 16,198,141,162,211,106,166,169,113, 54,
            194,134, 81,139,161,122, 79,121,142, 78, 26,176, 44,231, 61,141,101,151, 39, 15,185, 21,181,154, 61, 34, 22,201, 13,254, 47,166,
            250,237, 88, 46, 28, 53,217, 95,227,193, 41,147,167,208, 49,147,231,193, 68,176, 34,  8,159, 87, 69,244,184, 22,241,228, 41, 62,
            239,109, 98,169, 30,251,169, 17, 15,181,212,254,169, 83,115,230, 33, 22, 73,211,230, 25, 88,216, 98,151,178,180,105,168,133, 47,
            152,101,101,215,209, 34, 14,110, 40, 57,116,179,144,157, 79, 29,230,153, 25,208,177,235,234,120, 48,132, 51, 52,110,186,  3, 67,
             61, 44, 24, 22,219, 79, 60, 26,202, 97, 69, 54,126,231,212,162,109, 11,143,103, 24, 66,  9,217,208,114,120, 33, 68, 71,254,106,
            126,  1,  0,  0,255,255,
        ];

        static readonly Byte[] CircleGradient = //	384 bytes
        [
            188,144, 75,111,194, 48, 12,128, 65,203, 34,182,104, 26, 66,173, 16, 21, 82, 56,128,182,114,104, 15,219,  1,110,123,254,141,105,
            207,255,255, 23,150,164,121, 56,137,221,150, 29,102, 75, 52,118,252,125, 53,101, 66,190,221,222, 92,124,126,124,189,127,255, 60,
             63,189, 60, 62,188, 94,211, 49,207,147,209,131,139,249, 61,146, 24, 18,134,239,178, 36, 49,136,100,198,  5,128, 83,180,  3, 81,
             44, 17, 24,156, 33,104, 15,  8,  4,  9,126,  2, 28,  9,206,187,224, 51,222,242,182,105,109,  9,130,155, 68, 58,179, 70, 17,188,
            101, 67,188,185,225,240, 38,116, 58,135, 81, 12, 10,  8,133, 59, 51, 63,218,167,160, 37,254,223, 16,139, 64,  7,105,  1,203,160,
            171, 56, 73, 51,168,177,235, 76,166,103,211,221,118, 55,137, 66,247,116,170,190, 61,129,203,180, 99,106,102,126, 73,203,228,239,
            158,200, 50,202,179,213,117, 38,138, 53, 99, 68,212, 74,232,226,255,108,186, 18, 27,177,185, 12, 97,106,221, 17, 38, 67,237, 66,
            100,157,110,134, 52,165,207,196, 35, 19,183, 60,209,132,121,224, 70,  2,241, 72, 53, 45, 35, 15,106,241, 30, 25,255,227,244, 11,
            132,111,134, 91,156,199, 62,135, 60,164,197,125,159,162, 88,214,251,114, 95, 22, 54,150,234,172,210,149,174,238,178, 14,253,232,
             94, 89,236,105,216,130, 56,138, 82,221,215,214,  2,182, 33, 45,148,195,110,226, 38,123, 28,180,193,238,225, 54,209, 22,117,210,
             25, 28, 73, 77, 25,160, 99, 84,120,126,229, 99,125, 56, 86, 58, 87, 85,232, 17, 81,173,245,228,225,  8,104,195, 15, 27,212, 29,
            198,194,247, 27, 30, 26,186,218,113,  8,  9,223,237,121, 71,244, 80,158,140,104, 91,147, 68, 70,170,201, 95,  0,  0,  0,255,255,
        ];


        static readonly Byte[] AvLogo = //	138 bytes
        [
            156,209,209, 13,128, 32, 12, 64, 65, 73, 26,192, 41,220,192,133, 76,140,238,191,132, 10, 72, 43,181,216,138,127,244, 93,  2,  2,
            110,154,151,117,220,246, 65,183, 92, 90,129,239,128, 94,159,181,103,222,131, 90,255,242,136,237,156, 90,163,174, 40, 88, 49,202,
            232, 77,150, 66, 12,191,233,211,169,101,203,180,176, 85, 74, 39, 71, 61,118,239,212,195, 50,133,175, 11, 34,106,222,129,222, 28,
             84,230, 69,212,113,136,249, 35,128,231,242, 93, 89, 43,165,109,216,239, 74,213,139,114, 34, 23,105, 46, 30,252, 26,150,139,227,
            172,252, 12, 15,  7,  0,  0,  0,255,255,
        ];

        static readonly Byte[] AvLogoGradient = //	212 bytes
        [
            156,139, 75, 14,130, 48, 20, 69, 53,169, 38,202, 64,  7, 58,192,  9,144, 80, 19, 48,  1, 19, 32,193,153,223, 85,152, 24,191,251,
            223,130,229, 21, 91, 90,120, 77,241,118,208,246,222,115,136,227, 37,215,219,228,254,120,190,222,159,211,241,112,190,236,  7,118,
             25, 66,118,237,134,216,219,140, 46, 91,126, 73,172,237,191,124, 41, 35,250,  8,207, 88, 73, 28,233, 75, 28,161,182,144,226,190,
            178, 52, 55, 81, 47,183, 41, 74,176, 67,157,170,113,234, 80,186, 14,229,159,134, 58, 65, 67, 98,210,108, 69,221,178,244,112,168,
             67,155,253, 50,135,248, 30,191,217, 75, 52, 42, 81, 53,  4,149, 60, 85, 18,189, 31,  8,201,236,116, 24, 98,246,  3,126, 26,130,
            130, 47,170, 44, 33,105,  2, 31,165,225, 55,123,165,219,  4, 88, 12,213, 65, 51, 87, 83, 38,  8, 16,119,  5,201, 51, 87,132, 55,
            172,203,139,140, 96, 51,140,121, 81,157,198,230,214, 13,249,  2,  0,  0,255,255,
        ];


        public static String GetHtmlLogo(ConsoleColor bright = ConsoleColor.Green, ConsoleColor dark = ConsoleColor.DarkGreen, String tab = "", String nlStart = "<div>", String nlEnd = "</div>", String tag = "span")
            => AsciiTools.GetHtml(Logo, bright, dark, tab, nlStart, nlEnd, tag);
        
        public static String GetHtmlLogoGradient(String tab = "", String nlStart = "<div>", String nlEnd = "</div>", String tag = "span")
            => AsciiTools.GetHtmlGradient(LogoGradient, tab, nlStart, nlEnd, tag);


    }


}
